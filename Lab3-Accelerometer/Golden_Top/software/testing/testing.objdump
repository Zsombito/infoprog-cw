
testing.elf:     file format elf32-littlenios2
testing.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x000012ac memsz 0x000012ac flags r-x
    LOAD off    0x000022cc vaddr 0x000112cc paddr 0x00011458 align 2**12
         filesz 0x0000018c memsz 0x0000018c flags rw-
    LOAD off    0x000025e4 vaddr 0x000115e4 paddr 0x000115e4 align 2**12
         filesz 0x00000000 memsz 0x00000174 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000111c  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000030  0001129c  0001129c  0000229c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       0000018c  000112cc  00011458  000022cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000174  000115e4  000115e4  000025e4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00011758  00011758  00002458  2**0
                  CONTENTS
  7 .comment      00000046  00000000  00000000  00002458  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000418  00000000  00000000  000024a0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000053cb  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00001d22  00000000  00000000  00007c83  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000200a  00000000  00000000  000099a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00000590  00000000  00000000  0000b9b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00001973  00000000  00000000  0000bf40  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000017ee  00000000  00000000  0000d8b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0000f0a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000002f0  00000000  00000000  0000f0b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000109f2  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000109f5  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000109f8  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000109f9  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  000109fa  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  00010a03  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  00010a0c  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000012  00000000  00000000  00010a15  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000004a  00000000  00000000  00010a27  2**0
                  CONTENTS, READONLY
 26 .jdi          00005009  00000000  00000000  00010a71  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0004c404  00000000  00000000  00015a7a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
0001129c l    d  .rodata	00000000 .rodata
000112cc l    d  .rwdata	00000000 .rwdata
000115e4 l    d  .bss	00000000 .bss
00011758 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../testing_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 led_acceleromter_main.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00010634 l     F .text	0000006c print_repeat
00000000 l    df *ABS*	00000000 fvwrite_small_dev.c
00000000 l    df *ABS*	00000000 impure.c
000112cc l     O .rwdata	000000e0 impure_data
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
000113ac l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00011104 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 memcmp.c
00011604 g     O .bss	00000004 alt_instruction_exception_handler
00010eb0 g     F .text	0000002c alt_main
00011658 g     O .bss	00000100 alt_irq
00011458 g       *ABS*	00000000 __flash_rwdata_start
000105e8 g     F .text	0000004c printf
000101bc g     F .text	00000038 sys_timer_isr
0001143c g     O .rwdata	00000004 jtag_uart
000111f0 g     F .text	00000008 altera_nios2_gen2_irq_init
00010000 g     F .entry	0000000c __reset
00010ff8 g     F .text	00000058 alt_up_accelerometer_spi_read_x_axis
00010020 g       *ABS*	00000000 __flash_exceptions_start
000115f0 g     O .bss	00000004 errno
000115fc g     O .bss	00000004 alt_argv
00019430 g       *ABS*	00000000 _gp
000113d8 g     O .rwdata	00000030 alt_fd_list
00011178 g     F .text	00000074 alt_find_dev
000111f8 g     F .text	00000074 alt_exception_cause_generated_bad_addr
000105ac g     F .text	0000003c _printf_r
000104f0 g     F .text	00000064 .hidden __udivsi3
00011608 g     O .bss	00000028 avgx
00011440 g     O .rwdata	00000004 alt_max_fd
00010d3c g     F .text	00000094 alt_irq_register
00011630 g     O .bss	00000028 avgy
00011430 g     O .rwdata	00000004 _global_impure_ptr
00011758 g       *ABS*	00000000 __bss_end
000115f4 g     O .bss	00000004 alt_irq_active
000100fc g     F .exceptions	00000060 alt_irq_handler
00011408 g     O .rwdata	00000028 alt_dev_null
00011100 g     F .text	00000004 alt_dcache_flush_all
00011458 g       *ABS*	00000000 __ram_rwdata_end
000102b4 g     F .text	00000070 timer_init
00010000 g       *ABS*	00000000 __alt_mem_onchip_memory
000101f4 g     F .text	00000060 movingAVGx
00011444 g     O .rwdata	00000008 alt_dev_list
00010edc g     F .text	00000060 write
000112cc g       *ABS*	00000000 __ram_rodata_end
000115e8 g     O .bss	00000001 led
00010554 g     F .text	00000058 .hidden __umodsi3
00011758 g       *ABS*	00000000 end
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00020000 g       *ABS*	00000000 __alt_stack_pointer
00010f6c g     F .text	00000034 altera_avalon_jtag_uart_write
000106a0 g     F .text	0000052c ___vfprintf_internal_r
00010180 g     F .text	0000003c _start
000115ec g     O .bss	00000004 level
00010f5c g     F .text	00000010 alt_sys_init
00010fa8 g     F .text	00000014 alt_up_accelerometer_spi_read_address_register
00010d14 g     F .text	00000028 .hidden __mulsi3
000112cc g       *ABS*	00000000 __ram_rwdata_start
0001129c g       *ABS*	00000000 __ram_rodata_start
00011050 g     F .text	00000058 alt_up_accelerometer_spi_read_y_axis
0001126c g     F .text	00000030 memcmp
00011758 g       *ABS*	00000000 __alt_stack_base
0001110c g     F .text	0000006c alt_dev_llist_insert
00010be8 g     F .text	000000b8 __sfvwrite_small_dev
000115e4 g       *ABS*	00000000 __bss_start
00010324 g     F .text	000000d4 main
000115f8 g     O .bss	00000004 alt_envp
00011454 g     O .rwdata	00000004 alt_errno
000103f8 g     F .text	00000084 .hidden __divsi3
0001129c g       *ABS*	00000000 __flash_rodata_start
00010f3c g     F .text	00000020 alt_irq_init
00010cbc g     F .text	00000058 _write_r
00011434 g     O .rwdata	00000004 _impure_ptr
00011600 g     O .bss	00000004 alt_argc
00010020 g       .exceptions	00000000 alt_irq_entry
000115e4 g     O .bss	00000001 pwm
0001144c g     O .rwdata	00000008 alt_fs_list
00010020 g       *ABS*	00000000 __ram_exceptions_start
00010fa0 g     F .text	00000008 alt_up_accelerometer_spi_open_dev
00011458 g       *ABS*	00000000 _edata
00011758 g       *ABS*	00000000 _end
00010180 g       *ABS*	00000000 __ram_exceptions_end
0001047c g     F .text	00000074 .hidden __modsi3
000110a8 g     F .text	00000058 alt_up_accelerometer_spi_read_z_axis
00020000 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
00010254 g     F .text	00000060 movingAVGy
0001000c g       .entry	00000000 _exit
00010fbc g     F .text	00000020 alt_up_accelerometer_spi_read
00010fdc g     F .text	0000001c alt_up_accelerometer_spi_write
00010ca0 g     F .text	0000001c strlen
000111ec g     F .text	00000004 alt_icache_flush_all
00011438 g     O .rwdata	00000004 alt_priority_mask
00010bcc g     F .text	0000001c __vfprintf_internal
00010dd0 g     F .text	000000e0 alt_load



Disassembly of section .entry:

00010000 <__reset>:
   10000:	00400074 	movhi	at,1
   10004:	08406014 	ori	at,at,384
   10008:	0800683a 	jmp	at

0001000c <_exit>:
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:
   10020:	deffed04 	addi	sp,sp,-76
   10024:	dfc00015 	stw	ra,0(sp)
   10028:	d8400215 	stw	at,8(sp)
   1002c:	d8800315 	stw	r2,12(sp)
   10030:	d8c00415 	stw	r3,16(sp)
   10034:	d9000515 	stw	r4,20(sp)
   10038:	d9400615 	stw	r5,24(sp)
   1003c:	d9800715 	stw	r6,28(sp)
   10040:	d9c00815 	stw	r7,32(sp)
   10044:	000b307a 	rdctl	r5,estatus
   10048:	da000915 	stw	r8,36(sp)
   1004c:	da400a15 	stw	r9,40(sp)
   10050:	da800b15 	stw	r10,44(sp)
   10054:	dac00c15 	stw	r11,48(sp)
   10058:	db000d15 	stw	r12,52(sp)
   1005c:	db400e15 	stw	r13,56(sp)
   10060:	db800f15 	stw	r14,60(sp)
   10064:	dbc01015 	stw	r15,64(sp)
   10068:	d9401115 	stw	r5,68(sp)
   1006c:	ebffff04 	addi	r15,ea,-4
   10070:	dbc01215 	stw	r15,72(sp)
   10074:	0009313a 	rdctl	r4,ipending
   10078:	2880004c 	andi	r2,r5,1
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
   10084:	00100fc0 	call	100fc <alt_irq_handler>
   10088:	00000706 	br	100a8 <alt_exception+0x88>
   1008c:	df401215 	stw	ea,72(sp)
   10090:	e8bfff17 	ldw	r2,-4(ea)
   10094:	e93fff04 	addi	r4,ea,-4
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>
   100a0:	ebffff04 	addi	r15,ea,-4
   100a4:	dbc01215 	stw	r15,72(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
   100ac:	df401217 	ldw	ea,72(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)
   100b4:	2801707a 	wrctl	estatus,r5
   100b8:	d8400217 	ldw	at,8(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)
   100d4:	da000917 	ldw	r8,36(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
   100f4:	dec01304 	addi	sp,sp,76
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
   10108:	0007313a 	rdctl	r3,ipending
   1010c:	04000074 	movhi	r16,1
   10110:	84059604 	addi	r16,r16,5720
   10114:	000b883a 	mov	r5,zero
   10118:	00800044 	movi	r2,1
   1011c:	1888703a 	and	r4,r3,r2
   10120:	20000b26 	beq	r4,zero,10150 <alt_irq_handler+0x54>
   10124:	280490fa 	slli	r2,r5,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0007313a 	rdctl	r3,ipending
   1013c:	183ff51e 	bne	r3,zero,10114 <__alt_data_end+0xffff0114>
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
   10150:	1085883a 	add	r2,r2,r2
   10154:	29400044 	addi	r5,r5,1
   10158:	003ff006 	br	1011c <__alt_data_end+0xffff011c>

0001015c <alt_instruction_exception_entry>:
   1015c:	d0a07517 	ldw	r2,-32300(gp)
   10160:	10000426 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
   10164:	200b883a 	mov	r5,r4
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   10174:	003da03a 	break	0
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:
   10180:	06c000b4 	movhi	sp,2
   10184:	dec00014 	ori	sp,sp,0
   10188:	06800074 	movhi	gp,1
   1018c:	d6a50c14 	ori	gp,gp,37936
   10190:	00800074 	movhi	r2,1
   10194:	10857914 	ori	r2,r2,5604
   10198:	00c00074 	movhi	r3,1
   1019c:	18c5d614 	ori	r3,r3,5976
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>
   101a4:	10000015 	stw	zero,0(r2)
   101a8:	10800104 	addi	r2,r2,4
   101ac:	10fffd36 	bltu	r2,r3,101a4 <__alt_data_end+0xffff01a4>
   101b0:	0010dd00 	call	10dd0 <alt_load>
   101b4:	0010eb00 	call	10eb0 <alt_main>

000101b8 <alt_after_alt_main>:
   101b8:	003fff06 	br	101b8 <__alt_data_end+0xffff01b8>

000101bc <sys_timer_isr>:

	return average/N;
}

void sys_timer_isr() {
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   101bc:	008000b4 	movhi	r2,2
   101c0:	10840004 	addi	r2,r2,4096
   101c4:	10000035 	stwio	zero,0(r2)

	if (pwm > PWM_PERIOD) {
   101c8:	d0a06d03 	ldbu	r2,-32332(gp)
   101cc:	01000404 	movi	r4,16
   101d0:	10c03fcc 	andi	r3,r2,255
   101d4:	18c0201c 	xori	r3,r3,128
   101d8:	18ffe004 	addi	r3,r3,-128
   101dc:	20c0020e 	bge	r4,r3,101e8 <sys_timer_isr+0x2c>
		pwm = 0;
   101e0:	d0206d05 	stb	zero,-32332(gp)
   101e4:	f800283a 	ret
	} else {
		pwm++;
   101e8:	10800044 	addi	r2,r2,1
   101ec:	d0a06d05 	stb	r2,-32332(gp)
   101f0:	f800283a 	ret

000101f4 <movingAVGx>:
int level;

alt_32 avgx[N];
alt_32 avgy[N];

int movingAVGx(alt_32 readVal){
   101f4:	00c00074 	movhi	r3,1
   101f8:	18c58304 	addi	r3,r3,5644
   101fc:	0005883a 	mov	r2,zero

	alt_32 average = 0;
   10200:	000d883a 	mov	r6,zero

	for (int i = 1; i < N; i++){
		avgx[i-1] = avgx[i];
   10204:	1a7fff04 	addi	r9,r3,-4

int movingAVGx(alt_32 readVal){

	alt_32 average = 0;

	for (int i = 1; i < N; i++){
   10208:	01c00904 	movi	r7,36
		avgx[i-1] = avgx[i];
   1020c:	19400017 	ldw	r5,0(r3)
   10210:	1251883a 	add	r8,r2,r9
   10214:	10800104 	addi	r2,r2,4
   10218:	41400015 	stw	r5,0(r8)
		average += avgx[i-1];
   1021c:	314d883a 	add	r6,r6,r5
   10220:	18c00104 	addi	r3,r3,4

int movingAVGx(alt_32 readVal){

	alt_32 average = 0;

	for (int i = 1; i < N; i++){
   10224:	11fff91e 	bne	r2,r7,1020c <__alt_data_end+0xffff020c>
int level;

alt_32 avgx[N];
alt_32 avgy[N];

int movingAVGx(alt_32 readVal){
   10228:	deffff04 	addi	sp,sp,-4

	for (int i = 1; i < N; i++){
		avgx[i-1] = avgx[i];
		average += avgx[i-1];
	}
	avgx[N-1] = readVal;
   1022c:	00800074 	movhi	r2,1
int level;

alt_32 avgx[N];
alt_32 avgy[N];

int movingAVGx(alt_32 readVal){
   10230:	dfc00015 	stw	ra,0(sp)

	for (int i = 1; i < N; i++){
		avgx[i-1] = avgx[i];
		average += avgx[i-1];
	}
	avgx[N-1] = readVal;
   10234:	10858204 	addi	r2,r2,5640
   10238:	11000915 	stw	r4,36(r2)
	average += avgx[N-1];

	return average/N;
   1023c:	01400284 	movi	r5,10
   10240:	3109883a 	add	r4,r6,r4
   10244:	00103f80 	call	103f8 <__divsi3>

}
   10248:	dfc00017 	ldw	ra,0(sp)
   1024c:	dec00104 	addi	sp,sp,4
   10250:	f800283a 	ret

00010254 <movingAVGy>:
int movingAVGy(alt_32 readVal){
   10254:	00c00074 	movhi	r3,1
   10258:	18c58d04 	addi	r3,r3,5684
   1025c:	0005883a 	mov	r2,zero

	alt_32 average = 0;
   10260:	000d883a 	mov	r6,zero

	for (int i = 1; i < N; i++){
		avgy[i-1] = avgy[i];
   10264:	1a7fff04 	addi	r9,r3,-4
}
int movingAVGy(alt_32 readVal){

	alt_32 average = 0;

	for (int i = 1; i < N; i++){
   10268:	01c00904 	movi	r7,36
		avgy[i-1] = avgy[i];
   1026c:	19400017 	ldw	r5,0(r3)
   10270:	1251883a 	add	r8,r2,r9
   10274:	10800104 	addi	r2,r2,4
   10278:	41400015 	stw	r5,0(r8)
		average += avgy[i-1];
   1027c:	314d883a 	add	r6,r6,r5
   10280:	18c00104 	addi	r3,r3,4
}
int movingAVGy(alt_32 readVal){

	alt_32 average = 0;

	for (int i = 1; i < N; i++){
   10284:	11fff91e 	bne	r2,r7,1026c <__alt_data_end+0xffff026c>
	average += avgx[N-1];

	return average/N;

}
int movingAVGy(alt_32 readVal){
   10288:	deffff04 	addi	sp,sp,-4

	for (int i = 1; i < N; i++){
		avgy[i-1] = avgy[i];
		average += avgy[i-1];
	}
	avgy[N-1] = readVal;
   1028c:	00800074 	movhi	r2,1
	average += avgx[N-1];

	return average/N;

}
int movingAVGy(alt_32 readVal){
   10290:	dfc00015 	stw	ra,0(sp)

	for (int i = 1; i < N; i++){
		avgy[i-1] = avgy[i];
		average += avgy[i-1];
	}
	avgy[N-1] = readVal;
   10294:	10858c04 	addi	r2,r2,5680
   10298:	11000915 	stw	r4,36(r2)
	average += avgy[N-1];

	return average/N;
   1029c:	01400284 	movi	r5,10
   102a0:	3109883a 	add	r4,r6,r4
   102a4:	00103f80 	call	103f8 <__divsi3>
}
   102a8:	dfc00017 	ldw	ra,0(sp)
   102ac:	dec00104 	addi	sp,sp,4
   102b0:	f800283a 	ret

000102b4 <timer_init>:
	}
}



void timer_init(void * isr) {
   102b4:	defffe04 	addi	sp,sp,-8
   102b8:	dc000015 	stw	r16,0(sp)

	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   102bc:	040000b4 	movhi	r16,2
	}
}



void timer_init(void * isr) {
   102c0:	dfc00115 	stw	ra,4(sp)

	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   102c4:	84040104 	addi	r16,r16,4100
   102c8:	008000c4 	movi	r2,3
   102cc:	80800035 	stwio	r2,0(r16)
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   102d0:	00c000b4 	movhi	r3,2
   102d4:	0005883a 	mov	r2,zero
   102d8:	18c40004 	addi	r3,r3,4096
   102dc:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0900);
   102e0:	00c000b4 	movhi	r3,2
   102e4:	18c40204 	addi	r3,r3,4104
   102e8:	01424004 	movi	r5,2304
   102ec:	19400035 	stwio	r5,0(r3)
	IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
   102f0:	00c000b4 	movhi	r3,2
   102f4:	18c40304 	addi	r3,r3,4108
   102f8:	18800035 	stwio	r2,0(r3)
	alt_irq_register(TIMER_IRQ, 0, isr);
   102fc:	200d883a 	mov	r6,r4
   10300:	000b883a 	mov	r5,zero
   10304:	01000044 	movi	r4,1
   10308:	0010d3c0 	call	10d3c <alt_irq_register>
	IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
   1030c:	008001c4 	movi	r2,7
   10310:	80800035 	stwio	r2,0(r16)

}
   10314:	dfc00117 	ldw	ra,4(sp)
   10318:	dc000017 	ldw	r16,0(sp)
   1031c:	dec00204 	addi	sp,sp,8
   10320:	f800283a 	ret

00010324 <main>:
	alt_32 z_read;
	alt_u8 sw;
	alt_u8 button;

	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10324:	01000074 	movhi	r4,1

}



int main() {
   10328:	defff804 	addi	sp,sp,-32
	alt_32 z_read;
	alt_u8 sw;
	alt_u8 button;

	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   1032c:	2104a704 	addi	r4,r4,4764

}



int main() {
   10330:	dfc00715 	stw	ra,28(sp)
   10334:	dd000615 	stw	r20,24(sp)
   10338:	dcc00515 	stw	r19,20(sp)
   1033c:	dc800415 	stw	r18,16(sp)
   10340:	dc400315 	stw	r17,12(sp)
   10344:	dc000215 	stw	r16,8(sp)
	alt_32 z_read;
	alt_u8 sw;
	alt_u8 button;

	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10348:	0010fa00 	call	10fa0 <alt_up_accelerometer_spi_open_dev>
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   1034c:	10002126 	beq	r2,zero,103d4 <main+0xb0>
	return 1;
}

	timer_init(sys_timer_isr);
   10350:	01000074 	movhi	r4,1
   10354:	21006f04 	addi	r4,r4,444

	while (1) {

		sw=IORD(SWITCH_BASE,0);
   10358:	048000b4 	movhi	r18,2
		button=IORD(BUTTON_BASE,0);

		IOWR(LED_BASE,0, sw);
   1035c:	04c000b4 	movhi	r19,2
   10360:	1023883a 	mov	r17,r2

	timer_init(sys_timer_isr);

	while (1) {

		sw=IORD(SWITCH_BASE,0);
   10364:	94840804 	addi	r18,r18,4128
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
	return 1;
}

	timer_init(sys_timer_isr);
   10368:	00102b40 	call	102b4 <timer_init>
	while (1) {

		sw=IORD(SWITCH_BASE,0);
		button=IORD(BUTTON_BASE,0);

		IOWR(LED_BASE,0, sw);
   1036c:	9cc40c04 	addi	r19,r19,4144
	timer_init(sys_timer_isr);

	while (1) {

		sw=IORD(SWITCH_BASE,0);
		button=IORD(BUTTON_BASE,0);
   10370:	0029883a 	mov	r20,zero

	timer_init(sys_timer_isr);

	while (1) {

		sw=IORD(SWITCH_BASE,0);
   10374:	94000037 	ldwio	r16,0(r18)
		button=IORD(BUTTON_BASE,0);
   10378:	a0800037 	ldwio	r2,0(r20)

		IOWR(LED_BASE,0, sw);
   1037c:	80803fcc 	andi	r2,r16,255
   10380:	98800035 	stwio	r2,0(r19)

		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
   10384:	d9400104 	addi	r5,sp,4
   10388:	8809883a 	mov	r4,r17
   1038c:	0010ff80 	call	10ff8 <alt_up_accelerometer_spi_read_x_axis>
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
   10390:	d80b883a 	mov	r5,sp
   10394:	8809883a 	mov	r4,r17
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);
		//alt_printf("X AXIS = %x || Y AXIS = %x || Z AXIS = %x \n",movingAVG2(x_read),movingAVG2(y_read),movingAVG2(z_read));
		if ((sw & 0x01)==1){
   10398:	8400004c 	andi	r16,r16,1
		button=IORD(BUTTON_BASE,0);

		IOWR(LED_BASE,0, sw);

		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
   1039c:	00110500 	call	11050 <alt_up_accelerometer_spi_read_y_axis>
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);
		//alt_printf("X AXIS = %x || Y AXIS = %x || Z AXIS = %x \n",movingAVG2(x_read),movingAVG2(y_read),movingAVG2(z_read));
		if ((sw & 0x01)==1){
   103a0:	803ff426 	beq	r16,zero,10374 <__alt_data_end+0xffff0374>
		   printf("%d|%d|%d\n",movingAVGx(x_read),movingAVGy(y_read),(button&0x01 == 0));
   103a4:	d9000117 	ldw	r4,4(sp)
   103a8:	00101f40 	call	101f4 <movingAVGx>
   103ac:	d9000017 	ldw	r4,0(sp)
   103b0:	1021883a 	mov	r16,r2
   103b4:	00102540 	call	10254 <movingAVGy>
   103b8:	01000074 	movhi	r4,1
   103bc:	000f883a 	mov	r7,zero
   103c0:	100d883a 	mov	r6,r2
   103c4:	800b883a 	mov	r5,r16
   103c8:	2104ad04 	addi	r4,r4,4788
   103cc:	00105e80 	call	105e8 <printf>
   103d0:	003fe706 	br	10370 <__alt_data_end+0xffff0370>
		//while (clock() < start + 50);

	}

	return 0;
}
   103d4:	00800044 	movi	r2,1
   103d8:	dfc00717 	ldw	ra,28(sp)
   103dc:	dd000617 	ldw	r20,24(sp)
   103e0:	dcc00517 	ldw	r19,20(sp)
   103e4:	dc800417 	ldw	r18,16(sp)
   103e8:	dc400317 	ldw	r17,12(sp)
   103ec:	dc000217 	ldw	r16,8(sp)
   103f0:	dec00804 	addi	sp,sp,32
   103f4:	f800283a 	ret

000103f8 <__divsi3>:
   103f8:	20001b16 	blt	r4,zero,10468 <__divsi3+0x70>
   103fc:	000f883a 	mov	r7,zero
   10400:	28001616 	blt	r5,zero,1045c <__divsi3+0x64>
   10404:	200d883a 	mov	r6,r4
   10408:	29001a2e 	bgeu	r5,r4,10474 <__divsi3+0x7c>
   1040c:	00800804 	movi	r2,32
   10410:	00c00044 	movi	r3,1
   10414:	00000106 	br	1041c <__divsi3+0x24>
   10418:	10000d26 	beq	r2,zero,10450 <__divsi3+0x58>
   1041c:	294b883a 	add	r5,r5,r5
   10420:	10bfffc4 	addi	r2,r2,-1
   10424:	18c7883a 	add	r3,r3,r3
   10428:	293ffb36 	bltu	r5,r4,10418 <__alt_data_end+0xffff0418>
   1042c:	0005883a 	mov	r2,zero
   10430:	18000726 	beq	r3,zero,10450 <__divsi3+0x58>
   10434:	0005883a 	mov	r2,zero
   10438:	31400236 	bltu	r6,r5,10444 <__divsi3+0x4c>
   1043c:	314dc83a 	sub	r6,r6,r5
   10440:	10c4b03a 	or	r2,r2,r3
   10444:	1806d07a 	srli	r3,r3,1
   10448:	280ad07a 	srli	r5,r5,1
   1044c:	183ffa1e 	bne	r3,zero,10438 <__alt_data_end+0xffff0438>
   10450:	38000126 	beq	r7,zero,10458 <__divsi3+0x60>
   10454:	0085c83a 	sub	r2,zero,r2
   10458:	f800283a 	ret
   1045c:	014bc83a 	sub	r5,zero,r5
   10460:	39c0005c 	xori	r7,r7,1
   10464:	003fe706 	br	10404 <__alt_data_end+0xffff0404>
   10468:	0109c83a 	sub	r4,zero,r4
   1046c:	01c00044 	movi	r7,1
   10470:	003fe306 	br	10400 <__alt_data_end+0xffff0400>
   10474:	00c00044 	movi	r3,1
   10478:	003fee06 	br	10434 <__alt_data_end+0xffff0434>

0001047c <__modsi3>:
   1047c:	20001716 	blt	r4,zero,104dc <__modsi3+0x60>
   10480:	000f883a 	mov	r7,zero
   10484:	2005883a 	mov	r2,r4
   10488:	28001216 	blt	r5,zero,104d4 <__modsi3+0x58>
   1048c:	2900162e 	bgeu	r5,r4,104e8 <__modsi3+0x6c>
   10490:	01800804 	movi	r6,32
   10494:	00c00044 	movi	r3,1
   10498:	00000106 	br	104a0 <__modsi3+0x24>
   1049c:	30000a26 	beq	r6,zero,104c8 <__modsi3+0x4c>
   104a0:	294b883a 	add	r5,r5,r5
   104a4:	31bfffc4 	addi	r6,r6,-1
   104a8:	18c7883a 	add	r3,r3,r3
   104ac:	293ffb36 	bltu	r5,r4,1049c <__alt_data_end+0xffff049c>
   104b0:	18000526 	beq	r3,zero,104c8 <__modsi3+0x4c>
   104b4:	1806d07a 	srli	r3,r3,1
   104b8:	11400136 	bltu	r2,r5,104c0 <__modsi3+0x44>
   104bc:	1145c83a 	sub	r2,r2,r5
   104c0:	280ad07a 	srli	r5,r5,1
   104c4:	183ffb1e 	bne	r3,zero,104b4 <__alt_data_end+0xffff04b4>
   104c8:	38000126 	beq	r7,zero,104d0 <__modsi3+0x54>
   104cc:	0085c83a 	sub	r2,zero,r2
   104d0:	f800283a 	ret
   104d4:	014bc83a 	sub	r5,zero,r5
   104d8:	003fec06 	br	1048c <__alt_data_end+0xffff048c>
   104dc:	0109c83a 	sub	r4,zero,r4
   104e0:	01c00044 	movi	r7,1
   104e4:	003fe706 	br	10484 <__alt_data_end+0xffff0484>
   104e8:	00c00044 	movi	r3,1
   104ec:	003ff106 	br	104b4 <__alt_data_end+0xffff04b4>

000104f0 <__udivsi3>:
   104f0:	200d883a 	mov	r6,r4
   104f4:	2900152e 	bgeu	r5,r4,1054c <__udivsi3+0x5c>
   104f8:	28001416 	blt	r5,zero,1054c <__udivsi3+0x5c>
   104fc:	00800804 	movi	r2,32
   10500:	00c00044 	movi	r3,1
   10504:	00000206 	br	10510 <__udivsi3+0x20>
   10508:	10000e26 	beq	r2,zero,10544 <__udivsi3+0x54>
   1050c:	28000516 	blt	r5,zero,10524 <__udivsi3+0x34>
   10510:	294b883a 	add	r5,r5,r5
   10514:	10bfffc4 	addi	r2,r2,-1
   10518:	18c7883a 	add	r3,r3,r3
   1051c:	293ffa36 	bltu	r5,r4,10508 <__alt_data_end+0xffff0508>
   10520:	18000826 	beq	r3,zero,10544 <__udivsi3+0x54>
   10524:	0005883a 	mov	r2,zero
   10528:	31400236 	bltu	r6,r5,10534 <__udivsi3+0x44>
   1052c:	314dc83a 	sub	r6,r6,r5
   10530:	10c4b03a 	or	r2,r2,r3
   10534:	1806d07a 	srli	r3,r3,1
   10538:	280ad07a 	srli	r5,r5,1
   1053c:	183ffa1e 	bne	r3,zero,10528 <__alt_data_end+0xffff0528>
   10540:	f800283a 	ret
   10544:	0005883a 	mov	r2,zero
   10548:	f800283a 	ret
   1054c:	00c00044 	movi	r3,1
   10550:	003ff406 	br	10524 <__alt_data_end+0xffff0524>

00010554 <__umodsi3>:
   10554:	2005883a 	mov	r2,r4
   10558:	2900122e 	bgeu	r5,r4,105a4 <__umodsi3+0x50>
   1055c:	28001116 	blt	r5,zero,105a4 <__umodsi3+0x50>
   10560:	01800804 	movi	r6,32
   10564:	00c00044 	movi	r3,1
   10568:	00000206 	br	10574 <__umodsi3+0x20>
   1056c:	30000c26 	beq	r6,zero,105a0 <__umodsi3+0x4c>
   10570:	28000516 	blt	r5,zero,10588 <__umodsi3+0x34>
   10574:	294b883a 	add	r5,r5,r5
   10578:	31bfffc4 	addi	r6,r6,-1
   1057c:	18c7883a 	add	r3,r3,r3
   10580:	293ffa36 	bltu	r5,r4,1056c <__alt_data_end+0xffff056c>
   10584:	18000626 	beq	r3,zero,105a0 <__umodsi3+0x4c>
   10588:	1806d07a 	srli	r3,r3,1
   1058c:	11400136 	bltu	r2,r5,10594 <__umodsi3+0x40>
   10590:	1145c83a 	sub	r2,r2,r5
   10594:	280ad07a 	srli	r5,r5,1
   10598:	183ffb1e 	bne	r3,zero,10588 <__alt_data_end+0xffff0588>
   1059c:	f800283a 	ret
   105a0:	f800283a 	ret
   105a4:	00c00044 	movi	r3,1
   105a8:	003ff706 	br	10588 <__alt_data_end+0xffff0588>

000105ac <_printf_r>:
   105ac:	defffd04 	addi	sp,sp,-12
   105b0:	dfc00015 	stw	ra,0(sp)
   105b4:	d9800115 	stw	r6,4(sp)
   105b8:	d9c00215 	stw	r7,8(sp)
   105bc:	20c00217 	ldw	r3,8(r4)
   105c0:	01800074 	movhi	r6,1
   105c4:	3182fa04 	addi	r6,r6,3048
   105c8:	19800115 	stw	r6,4(r3)
   105cc:	280d883a 	mov	r6,r5
   105d0:	21400217 	ldw	r5,8(r4)
   105d4:	d9c00104 	addi	r7,sp,4
   105d8:	00106a00 	call	106a0 <___vfprintf_internal_r>
   105dc:	dfc00017 	ldw	ra,0(sp)
   105e0:	dec00304 	addi	sp,sp,12
   105e4:	f800283a 	ret

000105e8 <printf>:
   105e8:	defffc04 	addi	sp,sp,-16
   105ec:	dfc00015 	stw	ra,0(sp)
   105f0:	d9400115 	stw	r5,4(sp)
   105f4:	d9800215 	stw	r6,8(sp)
   105f8:	d9c00315 	stw	r7,12(sp)
   105fc:	00800074 	movhi	r2,1
   10600:	10850d04 	addi	r2,r2,5172
   10604:	10800017 	ldw	r2,0(r2)
   10608:	01400074 	movhi	r5,1
   1060c:	2942fa04 	addi	r5,r5,3048
   10610:	10c00217 	ldw	r3,8(r2)
   10614:	d9800104 	addi	r6,sp,4
   10618:	19400115 	stw	r5,4(r3)
   1061c:	200b883a 	mov	r5,r4
   10620:	11000217 	ldw	r4,8(r2)
   10624:	0010bcc0 	call	10bcc <__vfprintf_internal>
   10628:	dfc00017 	ldw	ra,0(sp)
   1062c:	dec00404 	addi	sp,sp,16
   10630:	f800283a 	ret

00010634 <print_repeat>:
   10634:	defffb04 	addi	sp,sp,-20
   10638:	dc800315 	stw	r18,12(sp)
   1063c:	dc400215 	stw	r17,8(sp)
   10640:	dc000115 	stw	r16,4(sp)
   10644:	dfc00415 	stw	ra,16(sp)
   10648:	2025883a 	mov	r18,r4
   1064c:	2823883a 	mov	r17,r5
   10650:	d9800005 	stb	r6,0(sp)
   10654:	3821883a 	mov	r16,r7
   10658:	04000a0e 	bge	zero,r16,10684 <print_repeat+0x50>
   1065c:	88800117 	ldw	r2,4(r17)
   10660:	01c00044 	movi	r7,1
   10664:	d80d883a 	mov	r6,sp
   10668:	880b883a 	mov	r5,r17
   1066c:	9009883a 	mov	r4,r18
   10670:	103ee83a 	callr	r2
   10674:	843fffc4 	addi	r16,r16,-1
   10678:	103ff726 	beq	r2,zero,10658 <__alt_data_end+0xffff0658>
   1067c:	00bfffc4 	movi	r2,-1
   10680:	00000106 	br	10688 <print_repeat+0x54>
   10684:	0005883a 	mov	r2,zero
   10688:	dfc00417 	ldw	ra,16(sp)
   1068c:	dc800317 	ldw	r18,12(sp)
   10690:	dc400217 	ldw	r17,8(sp)
   10694:	dc000117 	ldw	r16,4(sp)
   10698:	dec00504 	addi	sp,sp,20
   1069c:	f800283a 	ret

000106a0 <___vfprintf_internal_r>:
   106a0:	deffe504 	addi	sp,sp,-108
   106a4:	d8c00804 	addi	r3,sp,32
   106a8:	ddc01815 	stw	r23,96(sp)
   106ac:	dd801715 	stw	r22,92(sp)
   106b0:	dd401615 	stw	r21,88(sp)
   106b4:	dd001515 	stw	r20,84(sp)
   106b8:	dcc01415 	stw	r19,80(sp)
   106bc:	dc801315 	stw	r18,76(sp)
   106c0:	dc401215 	stw	r17,72(sp)
   106c4:	dc001115 	stw	r16,68(sp)
   106c8:	dfc01a15 	stw	ra,104(sp)
   106cc:	df001915 	stw	fp,100(sp)
   106d0:	2029883a 	mov	r20,r4
   106d4:	2823883a 	mov	r17,r5
   106d8:	382d883a 	mov	r22,r7
   106dc:	d9800f15 	stw	r6,60(sp)
   106e0:	0021883a 	mov	r16,zero
   106e4:	d8000e15 	stw	zero,56(sp)
   106e8:	d8000a15 	stw	zero,40(sp)
   106ec:	002b883a 	mov	r21,zero
   106f0:	0027883a 	mov	r19,zero
   106f4:	0025883a 	mov	r18,zero
   106f8:	d8000c15 	stw	zero,48(sp)
   106fc:	d8000b15 	stw	zero,44(sp)
   10700:	002f883a 	mov	r23,zero
   10704:	d8c00915 	stw	r3,36(sp)
   10708:	d8c00f17 	ldw	r3,60(sp)
   1070c:	19000003 	ldbu	r4,0(r3)
   10710:	20803fcc 	andi	r2,r4,255
   10714:	1080201c 	xori	r2,r2,128
   10718:	10bfe004 	addi	r2,r2,-128
   1071c:	10011e26 	beq	r2,zero,10b98 <___vfprintf_internal_r+0x4f8>
   10720:	00c00044 	movi	r3,1
   10724:	b8c01426 	beq	r23,r3,10778 <___vfprintf_internal_r+0xd8>
   10728:	1dc00216 	blt	r3,r23,10734 <___vfprintf_internal_r+0x94>
   1072c:	b8000626 	beq	r23,zero,10748 <___vfprintf_internal_r+0xa8>
   10730:	00011506 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10734:	01400084 	movi	r5,2
   10738:	b9401d26 	beq	r23,r5,107b0 <___vfprintf_internal_r+0x110>
   1073c:	014000c4 	movi	r5,3
   10740:	b9402b26 	beq	r23,r5,107f0 <___vfprintf_internal_r+0x150>
   10744:	00011006 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10748:	01400944 	movi	r5,37
   1074c:	1140fc26 	beq	r2,r5,10b40 <___vfprintf_internal_r+0x4a0>
   10750:	88800117 	ldw	r2,4(r17)
   10754:	d9000005 	stb	r4,0(sp)
   10758:	01c00044 	movi	r7,1
   1075c:	d80d883a 	mov	r6,sp
   10760:	880b883a 	mov	r5,r17
   10764:	a009883a 	mov	r4,r20
   10768:	103ee83a 	callr	r2
   1076c:	1000d81e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   10770:	84000044 	addi	r16,r16,1
   10774:	00010406 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10778:	01400c04 	movi	r5,48
   1077c:	1140fa26 	beq	r2,r5,10b68 <___vfprintf_internal_r+0x4c8>
   10780:	01400944 	movi	r5,37
   10784:	11400a1e 	bne	r2,r5,107b0 <___vfprintf_internal_r+0x110>
   10788:	d8800005 	stb	r2,0(sp)
   1078c:	88800117 	ldw	r2,4(r17)
   10790:	b80f883a 	mov	r7,r23
   10794:	d80d883a 	mov	r6,sp
   10798:	880b883a 	mov	r5,r17
   1079c:	a009883a 	mov	r4,r20
   107a0:	103ee83a 	callr	r2
   107a4:	1000ca1e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   107a8:	84000044 	addi	r16,r16,1
   107ac:	0000f506 	br	10b84 <___vfprintf_internal_r+0x4e4>
   107b0:	25fff404 	addi	r23,r4,-48
   107b4:	bdc03fcc 	andi	r23,r23,255
   107b8:	00c00244 	movi	r3,9
   107bc:	1dc00936 	bltu	r3,r23,107e4 <___vfprintf_internal_r+0x144>
   107c0:	00bfffc4 	movi	r2,-1
   107c4:	90800426 	beq	r18,r2,107d8 <___vfprintf_internal_r+0x138>
   107c8:	01400284 	movi	r5,10
   107cc:	9009883a 	mov	r4,r18
   107d0:	0010d140 	call	10d14 <__mulsi3>
   107d4:	00000106 	br	107dc <___vfprintf_internal_r+0x13c>
   107d8:	0005883a 	mov	r2,zero
   107dc:	b8a5883a 	add	r18,r23,r2
   107e0:	0000e206 	br	10b6c <___vfprintf_internal_r+0x4cc>
   107e4:	01400b84 	movi	r5,46
   107e8:	1140e426 	beq	r2,r5,10b7c <___vfprintf_internal_r+0x4dc>
   107ec:	05c00084 	movi	r23,2
   107f0:	213ff404 	addi	r4,r4,-48
   107f4:	27003fcc 	andi	fp,r4,255
   107f8:	00c00244 	movi	r3,9
   107fc:	1f000936 	bltu	r3,fp,10824 <___vfprintf_internal_r+0x184>
   10800:	00bfffc4 	movi	r2,-1
   10804:	98800426 	beq	r19,r2,10818 <___vfprintf_internal_r+0x178>
   10808:	01400284 	movi	r5,10
   1080c:	9809883a 	mov	r4,r19
   10810:	0010d140 	call	10d14 <__mulsi3>
   10814:	00000106 	br	1081c <___vfprintf_internal_r+0x17c>
   10818:	0005883a 	mov	r2,zero
   1081c:	e0a7883a 	add	r19,fp,r2
   10820:	0000d906 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10824:	00c01b04 	movi	r3,108
   10828:	10c0d226 	beq	r2,r3,10b74 <___vfprintf_internal_r+0x4d4>
   1082c:	013fffc4 	movi	r4,-1
   10830:	99000226 	beq	r19,r4,1083c <___vfprintf_internal_r+0x19c>
   10834:	d8000b15 	stw	zero,44(sp)
   10838:	00000106 	br	10840 <___vfprintf_internal_r+0x1a0>
   1083c:	04c00044 	movi	r19,1
   10840:	01001a44 	movi	r4,105
   10844:	11001626 	beq	r2,r4,108a0 <___vfprintf_internal_r+0x200>
   10848:	20800916 	blt	r4,r2,10870 <___vfprintf_internal_r+0x1d0>
   1084c:	010018c4 	movi	r4,99
   10850:	11008826 	beq	r2,r4,10a74 <___vfprintf_internal_r+0x3d4>
   10854:	01001904 	movi	r4,100
   10858:	11001126 	beq	r2,r4,108a0 <___vfprintf_internal_r+0x200>
   1085c:	01001604 	movi	r4,88
   10860:	1100c81e 	bne	r2,r4,10b84 <___vfprintf_internal_r+0x4e4>
   10864:	00c00044 	movi	r3,1
   10868:	d8c00e15 	stw	r3,56(sp)
   1086c:	00001506 	br	108c4 <___vfprintf_internal_r+0x224>
   10870:	01001cc4 	movi	r4,115
   10874:	11009826 	beq	r2,r4,10ad8 <___vfprintf_internal_r+0x438>
   10878:	20800416 	blt	r4,r2,1088c <___vfprintf_internal_r+0x1ec>
   1087c:	01001bc4 	movi	r4,111
   10880:	1100c01e 	bne	r2,r4,10b84 <___vfprintf_internal_r+0x4e4>
   10884:	05400204 	movi	r21,8
   10888:	00000f06 	br	108c8 <___vfprintf_internal_r+0x228>
   1088c:	01001d44 	movi	r4,117
   10890:	11000d26 	beq	r2,r4,108c8 <___vfprintf_internal_r+0x228>
   10894:	01001e04 	movi	r4,120
   10898:	11000a26 	beq	r2,r4,108c4 <___vfprintf_internal_r+0x224>
   1089c:	0000b906 	br	10b84 <___vfprintf_internal_r+0x4e4>
   108a0:	d8c00a17 	ldw	r3,40(sp)
   108a4:	b7000104 	addi	fp,r22,4
   108a8:	18000726 	beq	r3,zero,108c8 <___vfprintf_internal_r+0x228>
   108ac:	df000d15 	stw	fp,52(sp)
   108b0:	b5c00017 	ldw	r23,0(r22)
   108b4:	b800080e 	bge	r23,zero,108d8 <___vfprintf_internal_r+0x238>
   108b8:	05efc83a 	sub	r23,zero,r23
   108bc:	02400044 	movi	r9,1
   108c0:	00000606 	br	108dc <___vfprintf_internal_r+0x23c>
   108c4:	05400404 	movi	r21,16
   108c8:	b0c00104 	addi	r3,r22,4
   108cc:	d8c00d15 	stw	r3,52(sp)
   108d0:	b5c00017 	ldw	r23,0(r22)
   108d4:	d8000a15 	stw	zero,40(sp)
   108d8:	0013883a 	mov	r9,zero
   108dc:	d839883a 	mov	fp,sp
   108e0:	b8001726 	beq	r23,zero,10940 <___vfprintf_internal_r+0x2a0>
   108e4:	a80b883a 	mov	r5,r21
   108e8:	b809883a 	mov	r4,r23
   108ec:	da401015 	stw	r9,64(sp)
   108f0:	00104f00 	call	104f0 <__udivsi3>
   108f4:	a80b883a 	mov	r5,r21
   108f8:	1009883a 	mov	r4,r2
   108fc:	102d883a 	mov	r22,r2
   10900:	0010d140 	call	10d14 <__mulsi3>
   10904:	b885c83a 	sub	r2,r23,r2
   10908:	00c00244 	movi	r3,9
   1090c:	da401017 	ldw	r9,64(sp)
   10910:	18800216 	blt	r3,r2,1091c <___vfprintf_internal_r+0x27c>
   10914:	10800c04 	addi	r2,r2,48
   10918:	00000506 	br	10930 <___vfprintf_internal_r+0x290>
   1091c:	d8c00e17 	ldw	r3,56(sp)
   10920:	18000226 	beq	r3,zero,1092c <___vfprintf_internal_r+0x28c>
   10924:	10800dc4 	addi	r2,r2,55
   10928:	00000106 	br	10930 <___vfprintf_internal_r+0x290>
   1092c:	108015c4 	addi	r2,r2,87
   10930:	e0800005 	stb	r2,0(fp)
   10934:	b02f883a 	mov	r23,r22
   10938:	e7000044 	addi	fp,fp,1
   1093c:	003fe806 	br	108e0 <__alt_data_end+0xffff08e0>
   10940:	e6efc83a 	sub	r23,fp,sp
   10944:	9dc5c83a 	sub	r2,r19,r23
   10948:	0080090e 	bge	zero,r2,10970 <___vfprintf_internal_r+0x2d0>
   1094c:	e085883a 	add	r2,fp,r2
   10950:	01400c04 	movi	r5,48
   10954:	d8c00917 	ldw	r3,36(sp)
   10958:	e009883a 	mov	r4,fp
   1095c:	e0c0032e 	bgeu	fp,r3,1096c <___vfprintf_internal_r+0x2cc>
   10960:	e7000044 	addi	fp,fp,1
   10964:	21400005 	stb	r5,0(r4)
   10968:	e0bffa1e 	bne	fp,r2,10954 <__alt_data_end+0xffff0954>
   1096c:	e6efc83a 	sub	r23,fp,sp
   10970:	d8c00b17 	ldw	r3,44(sp)
   10974:	4dd1883a 	add	r8,r9,r23
   10978:	922dc83a 	sub	r22,r18,r8
   1097c:	18001626 	beq	r3,zero,109d8 <___vfprintf_internal_r+0x338>
   10980:	48000a26 	beq	r9,zero,109ac <___vfprintf_internal_r+0x30c>
   10984:	00800b44 	movi	r2,45
   10988:	d8800805 	stb	r2,32(sp)
   1098c:	88800117 	ldw	r2,4(r17)
   10990:	01c00044 	movi	r7,1
   10994:	d9800804 	addi	r6,sp,32
   10998:	880b883a 	mov	r5,r17
   1099c:	a009883a 	mov	r4,r20
   109a0:	103ee83a 	callr	r2
   109a4:	10004a1e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   109a8:	84000044 	addi	r16,r16,1
   109ac:	0580070e 	bge	zero,r22,109cc <___vfprintf_internal_r+0x32c>
   109b0:	b00f883a 	mov	r7,r22
   109b4:	01800c04 	movi	r6,48
   109b8:	880b883a 	mov	r5,r17
   109bc:	a009883a 	mov	r4,r20
   109c0:	00106340 	call	10634 <print_repeat>
   109c4:	1000421e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   109c8:	85a1883a 	add	r16,r16,r22
   109cc:	e02d883a 	mov	r22,fp
   109d0:	bf2fc83a 	sub	r23,r23,fp
   109d4:	00002006 	br	10a58 <___vfprintf_internal_r+0x3b8>
   109d8:	0580090e 	bge	zero,r22,10a00 <___vfprintf_internal_r+0x360>
   109dc:	b00f883a 	mov	r7,r22
   109e0:	01800804 	movi	r6,32
   109e4:	880b883a 	mov	r5,r17
   109e8:	a009883a 	mov	r4,r20
   109ec:	da401015 	stw	r9,64(sp)
   109f0:	00106340 	call	10634 <print_repeat>
   109f4:	da401017 	ldw	r9,64(sp)
   109f8:	1000351e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   109fc:	85a1883a 	add	r16,r16,r22
   10a00:	483ff226 	beq	r9,zero,109cc <__alt_data_end+0xffff09cc>
   10a04:	00800b44 	movi	r2,45
   10a08:	d8800805 	stb	r2,32(sp)
   10a0c:	88800117 	ldw	r2,4(r17)
   10a10:	01c00044 	movi	r7,1
   10a14:	d9800804 	addi	r6,sp,32
   10a18:	880b883a 	mov	r5,r17
   10a1c:	a009883a 	mov	r4,r20
   10a20:	103ee83a 	callr	r2
   10a24:	10002a1e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   10a28:	84000044 	addi	r16,r16,1
   10a2c:	003fe706 	br	109cc <__alt_data_end+0xffff09cc>
   10a30:	b5bfffc4 	addi	r22,r22,-1
   10a34:	b0800003 	ldbu	r2,0(r22)
   10a38:	01c00044 	movi	r7,1
   10a3c:	d9800804 	addi	r6,sp,32
   10a40:	d8800805 	stb	r2,32(sp)
   10a44:	88800117 	ldw	r2,4(r17)
   10a48:	880b883a 	mov	r5,r17
   10a4c:	a009883a 	mov	r4,r20
   10a50:	103ee83a 	callr	r2
   10a54:	10001e1e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   10a58:	8585c83a 	sub	r2,r16,r22
   10a5c:	b5c9883a 	add	r4,r22,r23
   10a60:	e085883a 	add	r2,fp,r2
   10a64:	013ff216 	blt	zero,r4,10a30 <__alt_data_end+0xffff0a30>
   10a68:	1021883a 	mov	r16,r2
   10a6c:	dd800d17 	ldw	r22,52(sp)
   10a70:	00004406 	br	10b84 <___vfprintf_internal_r+0x4e4>
   10a74:	00800044 	movi	r2,1
   10a78:	1480080e 	bge	r2,r18,10a9c <___vfprintf_internal_r+0x3fc>
   10a7c:	95ffffc4 	addi	r23,r18,-1
   10a80:	b80f883a 	mov	r7,r23
   10a84:	01800804 	movi	r6,32
   10a88:	880b883a 	mov	r5,r17
   10a8c:	a009883a 	mov	r4,r20
   10a90:	00106340 	call	10634 <print_repeat>
   10a94:	10000e1e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   10a98:	85e1883a 	add	r16,r16,r23
   10a9c:	b0800017 	ldw	r2,0(r22)
   10aa0:	01c00044 	movi	r7,1
   10aa4:	d80d883a 	mov	r6,sp
   10aa8:	d8800005 	stb	r2,0(sp)
   10aac:	88800117 	ldw	r2,4(r17)
   10ab0:	880b883a 	mov	r5,r17
   10ab4:	a009883a 	mov	r4,r20
   10ab8:	b5c00104 	addi	r23,r22,4
   10abc:	103ee83a 	callr	r2
   10ac0:	1000031e 	bne	r2,zero,10ad0 <___vfprintf_internal_r+0x430>
   10ac4:	84000044 	addi	r16,r16,1
   10ac8:	b82d883a 	mov	r22,r23
   10acc:	00002d06 	br	10b84 <___vfprintf_internal_r+0x4e4>
   10ad0:	00bfffc4 	movi	r2,-1
   10ad4:	00003106 	br	10b9c <___vfprintf_internal_r+0x4fc>
   10ad8:	b5c00017 	ldw	r23,0(r22)
   10adc:	b7000104 	addi	fp,r22,4
   10ae0:	b809883a 	mov	r4,r23
   10ae4:	0010ca00 	call	10ca0 <strlen>
   10ae8:	9091c83a 	sub	r8,r18,r2
   10aec:	102d883a 	mov	r22,r2
   10af0:	0200090e 	bge	zero,r8,10b18 <___vfprintf_internal_r+0x478>
   10af4:	400f883a 	mov	r7,r8
   10af8:	01800804 	movi	r6,32
   10afc:	880b883a 	mov	r5,r17
   10b00:	a009883a 	mov	r4,r20
   10b04:	da001015 	stw	r8,64(sp)
   10b08:	00106340 	call	10634 <print_repeat>
   10b0c:	da001017 	ldw	r8,64(sp)
   10b10:	103fef1e 	bne	r2,zero,10ad0 <__alt_data_end+0xffff0ad0>
   10b14:	8221883a 	add	r16,r16,r8
   10b18:	88800117 	ldw	r2,4(r17)
   10b1c:	b00f883a 	mov	r7,r22
   10b20:	b80d883a 	mov	r6,r23
   10b24:	880b883a 	mov	r5,r17
   10b28:	a009883a 	mov	r4,r20
   10b2c:	103ee83a 	callr	r2
   10b30:	103fe71e 	bne	r2,zero,10ad0 <__alt_data_end+0xffff0ad0>
   10b34:	85a1883a 	add	r16,r16,r22
   10b38:	e02d883a 	mov	r22,fp
   10b3c:	00001106 	br	10b84 <___vfprintf_internal_r+0x4e4>
   10b40:	00c00044 	movi	r3,1
   10b44:	04ffffc4 	movi	r19,-1
   10b48:	d8000e15 	stw	zero,56(sp)
   10b4c:	d8c00a15 	stw	r3,40(sp)
   10b50:	05400284 	movi	r21,10
   10b54:	9825883a 	mov	r18,r19
   10b58:	d8000c15 	stw	zero,48(sp)
   10b5c:	d8000b15 	stw	zero,44(sp)
   10b60:	182f883a 	mov	r23,r3
   10b64:	00000806 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10b68:	ddc00b15 	stw	r23,44(sp)
   10b6c:	05c00084 	movi	r23,2
   10b70:	00000506 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10b74:	00c00044 	movi	r3,1
   10b78:	d8c00c15 	stw	r3,48(sp)
   10b7c:	05c000c4 	movi	r23,3
   10b80:	00000106 	br	10b88 <___vfprintf_internal_r+0x4e8>
   10b84:	002f883a 	mov	r23,zero
   10b88:	d8c00f17 	ldw	r3,60(sp)
   10b8c:	18c00044 	addi	r3,r3,1
   10b90:	d8c00f15 	stw	r3,60(sp)
   10b94:	003edc06 	br	10708 <__alt_data_end+0xffff0708>
   10b98:	8005883a 	mov	r2,r16
   10b9c:	dfc01a17 	ldw	ra,104(sp)
   10ba0:	df001917 	ldw	fp,100(sp)
   10ba4:	ddc01817 	ldw	r23,96(sp)
   10ba8:	dd801717 	ldw	r22,92(sp)
   10bac:	dd401617 	ldw	r21,88(sp)
   10bb0:	dd001517 	ldw	r20,84(sp)
   10bb4:	dcc01417 	ldw	r19,80(sp)
   10bb8:	dc801317 	ldw	r18,76(sp)
   10bbc:	dc401217 	ldw	r17,72(sp)
   10bc0:	dc001117 	ldw	r16,68(sp)
   10bc4:	dec01b04 	addi	sp,sp,108
   10bc8:	f800283a 	ret

00010bcc <__vfprintf_internal>:
   10bcc:	00800074 	movhi	r2,1
   10bd0:	10850d04 	addi	r2,r2,5172
   10bd4:	300f883a 	mov	r7,r6
   10bd8:	280d883a 	mov	r6,r5
   10bdc:	200b883a 	mov	r5,r4
   10be0:	11000017 	ldw	r4,0(r2)
   10be4:	00106a01 	jmpi	106a0 <___vfprintf_internal_r>

00010be8 <__sfvwrite_small_dev>:
   10be8:	2880000b 	ldhu	r2,0(r5)
   10bec:	1080020c 	andi	r2,r2,8
   10bf0:	10002126 	beq	r2,zero,10c78 <__sfvwrite_small_dev+0x90>
   10bf4:	2880008f 	ldh	r2,2(r5)
   10bf8:	defffa04 	addi	sp,sp,-24
   10bfc:	dc000015 	stw	r16,0(sp)
   10c00:	dfc00515 	stw	ra,20(sp)
   10c04:	dd000415 	stw	r20,16(sp)
   10c08:	dcc00315 	stw	r19,12(sp)
   10c0c:	dc800215 	stw	r18,8(sp)
   10c10:	dc400115 	stw	r17,4(sp)
   10c14:	2821883a 	mov	r16,r5
   10c18:	10001216 	blt	r2,zero,10c64 <__sfvwrite_small_dev+0x7c>
   10c1c:	2027883a 	mov	r19,r4
   10c20:	3025883a 	mov	r18,r6
   10c24:	3823883a 	mov	r17,r7
   10c28:	05010004 	movi	r20,1024
   10c2c:	04400b0e 	bge	zero,r17,10c5c <__sfvwrite_small_dev+0x74>
   10c30:	880f883a 	mov	r7,r17
   10c34:	a440010e 	bge	r20,r17,10c3c <__sfvwrite_small_dev+0x54>
   10c38:	01c10004 	movi	r7,1024
   10c3c:	8140008f 	ldh	r5,2(r16)
   10c40:	900d883a 	mov	r6,r18
   10c44:	9809883a 	mov	r4,r19
   10c48:	0010cbc0 	call	10cbc <_write_r>
   10c4c:	0080050e 	bge	zero,r2,10c64 <__sfvwrite_small_dev+0x7c>
   10c50:	88a3c83a 	sub	r17,r17,r2
   10c54:	90a5883a 	add	r18,r18,r2
   10c58:	003ff406 	br	10c2c <__alt_data_end+0xffff0c2c>
   10c5c:	0005883a 	mov	r2,zero
   10c60:	00000706 	br	10c80 <__sfvwrite_small_dev+0x98>
   10c64:	8080000b 	ldhu	r2,0(r16)
   10c68:	10801014 	ori	r2,r2,64
   10c6c:	8080000d 	sth	r2,0(r16)
   10c70:	00bfffc4 	movi	r2,-1
   10c74:	00000206 	br	10c80 <__sfvwrite_small_dev+0x98>
   10c78:	00bfffc4 	movi	r2,-1
   10c7c:	f800283a 	ret
   10c80:	dfc00517 	ldw	ra,20(sp)
   10c84:	dd000417 	ldw	r20,16(sp)
   10c88:	dcc00317 	ldw	r19,12(sp)
   10c8c:	dc800217 	ldw	r18,8(sp)
   10c90:	dc400117 	ldw	r17,4(sp)
   10c94:	dc000017 	ldw	r16,0(sp)
   10c98:	dec00604 	addi	sp,sp,24
   10c9c:	f800283a 	ret

00010ca0 <strlen>:
   10ca0:	2005883a 	mov	r2,r4
   10ca4:	10c00007 	ldb	r3,0(r2)
   10ca8:	18000226 	beq	r3,zero,10cb4 <strlen+0x14>
   10cac:	10800044 	addi	r2,r2,1
   10cb0:	003ffc06 	br	10ca4 <__alt_data_end+0xffff0ca4>
   10cb4:	1105c83a 	sub	r2,r2,r4
   10cb8:	f800283a 	ret

00010cbc <_write_r>:
   10cbc:	defffd04 	addi	sp,sp,-12
   10cc0:	dc000015 	stw	r16,0(sp)
   10cc4:	04000074 	movhi	r16,1
   10cc8:	dc400115 	stw	r17,4(sp)
   10ccc:	84057c04 	addi	r16,r16,5616
   10cd0:	2023883a 	mov	r17,r4
   10cd4:	2809883a 	mov	r4,r5
   10cd8:	300b883a 	mov	r5,r6
   10cdc:	380d883a 	mov	r6,r7
   10ce0:	dfc00215 	stw	ra,8(sp)
   10ce4:	80000015 	stw	zero,0(r16)
   10ce8:	0010edc0 	call	10edc <write>
   10cec:	00ffffc4 	movi	r3,-1
   10cf0:	10c0031e 	bne	r2,r3,10d00 <_write_r+0x44>
   10cf4:	80c00017 	ldw	r3,0(r16)
   10cf8:	18000126 	beq	r3,zero,10d00 <_write_r+0x44>
   10cfc:	88c00015 	stw	r3,0(r17)
   10d00:	dfc00217 	ldw	ra,8(sp)
   10d04:	dc400117 	ldw	r17,4(sp)
   10d08:	dc000017 	ldw	r16,0(sp)
   10d0c:	dec00304 	addi	sp,sp,12
   10d10:	f800283a 	ret

00010d14 <__mulsi3>:
   10d14:	0005883a 	mov	r2,zero
   10d18:	20000726 	beq	r4,zero,10d38 <__mulsi3+0x24>
   10d1c:	20c0004c 	andi	r3,r4,1
   10d20:	2008d07a 	srli	r4,r4,1
   10d24:	18000126 	beq	r3,zero,10d2c <__mulsi3+0x18>
   10d28:	1145883a 	add	r2,r2,r5
   10d2c:	294b883a 	add	r5,r5,r5
   10d30:	203ffa1e 	bne	r4,zero,10d1c <__alt_data_end+0xffff0d1c>
   10d34:	f800283a 	ret
   10d38:	f800283a 	ret

00010d3c <alt_irq_register>:
   10d3c:	008007c4 	movi	r2,31
   10d40:	11002136 	bltu	r2,r4,10dc8 <alt_irq_register+0x8c>
   10d44:	000f303a 	rdctl	r7,status
   10d48:	00ffff84 	movi	r3,-2
   10d4c:	38c4703a 	and	r2,r7,r3
   10d50:	1001703a 	wrctl	status,r2
   10d54:	200490fa 	slli	r2,r4,3
   10d58:	02000074 	movhi	r8,1
   10d5c:	42059604 	addi	r8,r8,5720
   10d60:	4085883a 	add	r2,r8,r2
   10d64:	11800015 	stw	r6,0(r2)
   10d68:	11400115 	stw	r5,4(r2)
   10d6c:	00800044 	movi	r2,1
   10d70:	30000726 	beq	r6,zero,10d90 <alt_irq_register+0x54>
   10d74:	000b303a 	rdctl	r5,status
   10d78:	28c6703a 	and	r3,r5,r3
   10d7c:	1801703a 	wrctl	status,r3
   10d80:	d0e07117 	ldw	r3,-32316(gp)
   10d84:	1104983a 	sll	r2,r2,r4
   10d88:	10c4b03a 	or	r2,r2,r3
   10d8c:	00000706 	br	10dac <alt_irq_register+0x70>
   10d90:	000b303a 	rdctl	r5,status
   10d94:	28c6703a 	and	r3,r5,r3
   10d98:	1801703a 	wrctl	status,r3
   10d9c:	1104983a 	sll	r2,r2,r4
   10da0:	d0e07117 	ldw	r3,-32316(gp)
   10da4:	0084303a 	nor	r2,zero,r2
   10da8:	10c4703a 	and	r2,r2,r3
   10dac:	d0a07115 	stw	r2,-32316(gp)
   10db0:	d0a07117 	ldw	r2,-32316(gp)
   10db4:	100170fa 	wrctl	ienable,r2
   10db8:	2801703a 	wrctl	status,r5
   10dbc:	3801703a 	wrctl	status,r7
   10dc0:	0005883a 	mov	r2,zero
   10dc4:	f800283a 	ret
   10dc8:	00bffa84 	movi	r2,-22
   10dcc:	f800283a 	ret

00010dd0 <alt_load>:
   10dd0:	deffff04 	addi	sp,sp,-4
   10dd4:	01000074 	movhi	r4,1
   10dd8:	01400074 	movhi	r5,1
   10ddc:	dfc00015 	stw	ra,0(sp)
   10de0:	2104b304 	addi	r4,r4,4812
   10de4:	29451604 	addi	r5,r5,5208
   10de8:	2140061e 	bne	r4,r5,10e04 <alt_load+0x34>
   10dec:	01000074 	movhi	r4,1
   10df0:	01400074 	movhi	r5,1
   10df4:	21000804 	addi	r4,r4,32
   10df8:	29400804 	addi	r5,r5,32
   10dfc:	2140121e 	bne	r4,r5,10e48 <alt_load+0x78>
   10e00:	00000b06 	br	10e30 <alt_load+0x60>
   10e04:	00c00074 	movhi	r3,1
   10e08:	18c51604 	addi	r3,r3,5208
   10e0c:	1907c83a 	sub	r3,r3,r4
   10e10:	0005883a 	mov	r2,zero
   10e14:	10fff526 	beq	r2,r3,10dec <__alt_data_end+0xffff0dec>
   10e18:	114f883a 	add	r7,r2,r5
   10e1c:	39c00017 	ldw	r7,0(r7)
   10e20:	110d883a 	add	r6,r2,r4
   10e24:	10800104 	addi	r2,r2,4
   10e28:	31c00015 	stw	r7,0(r6)
   10e2c:	003ff906 	br	10e14 <__alt_data_end+0xffff0e14>
   10e30:	01000074 	movhi	r4,1
   10e34:	01400074 	movhi	r5,1
   10e38:	2104a704 	addi	r4,r4,4764
   10e3c:	2944a704 	addi	r5,r5,4764
   10e40:	2140101e 	bne	r4,r5,10e84 <alt_load+0xb4>
   10e44:	00000b06 	br	10e74 <alt_load+0xa4>
   10e48:	00c00074 	movhi	r3,1
   10e4c:	18c06004 	addi	r3,r3,384
   10e50:	1907c83a 	sub	r3,r3,r4
   10e54:	0005883a 	mov	r2,zero
   10e58:	10fff526 	beq	r2,r3,10e30 <__alt_data_end+0xffff0e30>
   10e5c:	114f883a 	add	r7,r2,r5
   10e60:	39c00017 	ldw	r7,0(r7)
   10e64:	110d883a 	add	r6,r2,r4
   10e68:	10800104 	addi	r2,r2,4
   10e6c:	31c00015 	stw	r7,0(r6)
   10e70:	003ff906 	br	10e58 <__alt_data_end+0xffff0e58>
   10e74:	00111000 	call	11100 <alt_dcache_flush_all>
   10e78:	dfc00017 	ldw	ra,0(sp)
   10e7c:	dec00104 	addi	sp,sp,4
   10e80:	00111ec1 	jmpi	111ec <alt_icache_flush_all>
   10e84:	00c00074 	movhi	r3,1
   10e88:	18c4b304 	addi	r3,r3,4812
   10e8c:	1907c83a 	sub	r3,r3,r4
   10e90:	0005883a 	mov	r2,zero
   10e94:	18bff726 	beq	r3,r2,10e74 <__alt_data_end+0xffff0e74>
   10e98:	114f883a 	add	r7,r2,r5
   10e9c:	39c00017 	ldw	r7,0(r7)
   10ea0:	110d883a 	add	r6,r2,r4
   10ea4:	10800104 	addi	r2,r2,4
   10ea8:	31c00015 	stw	r7,0(r6)
   10eac:	003ff906 	br	10e94 <__alt_data_end+0xffff0e94>

00010eb0 <alt_main>:
   10eb0:	deffff04 	addi	sp,sp,-4
   10eb4:	0009883a 	mov	r4,zero
   10eb8:	dfc00015 	stw	ra,0(sp)
   10ebc:	0010f3c0 	call	10f3c <alt_irq_init>
   10ec0:	0010f5c0 	call	10f5c <alt_sys_init>
   10ec4:	d1a07217 	ldw	r6,-32312(gp)
   10ec8:	d1607317 	ldw	r5,-32308(gp)
   10ecc:	d1207417 	ldw	r4,-32304(gp)
   10ed0:	dfc00017 	ldw	ra,0(sp)
   10ed4:	dec00104 	addi	sp,sp,4
   10ed8:	00103241 	jmpi	10324 <main>

00010edc <write>:
   10edc:	00800044 	movi	r2,1
   10ee0:	20800226 	beq	r4,r2,10eec <write+0x10>
   10ee4:	00800084 	movi	r2,2
   10ee8:	2080041e 	bne	r4,r2,10efc <write+0x20>
   10eec:	01000074 	movhi	r4,1
   10ef0:	000f883a 	mov	r7,zero
   10ef4:	21050f04 	addi	r4,r4,5180
   10ef8:	0010f6c1 	jmpi	10f6c <altera_avalon_jtag_uart_write>
   10efc:	d0a00917 	ldw	r2,-32732(gp)
   10f00:	10000926 	beq	r2,zero,10f28 <write+0x4c>
   10f04:	deffff04 	addi	sp,sp,-4
   10f08:	dfc00015 	stw	ra,0(sp)
   10f0c:	103ee83a 	callr	r2
   10f10:	00c01444 	movi	r3,81
   10f14:	10c00015 	stw	r3,0(r2)
   10f18:	00bfffc4 	movi	r2,-1
   10f1c:	dfc00017 	ldw	ra,0(sp)
   10f20:	dec00104 	addi	sp,sp,4
   10f24:	f800283a 	ret
   10f28:	d0a07004 	addi	r2,gp,-32320
   10f2c:	00c01444 	movi	r3,81
   10f30:	10c00015 	stw	r3,0(r2)
   10f34:	00bfffc4 	movi	r2,-1
   10f38:	f800283a 	ret

00010f3c <alt_irq_init>:
   10f3c:	deffff04 	addi	sp,sp,-4
   10f40:	dfc00015 	stw	ra,0(sp)
   10f44:	00111f00 	call	111f0 <altera_nios2_gen2_irq_init>
   10f48:	00800044 	movi	r2,1
   10f4c:	1001703a 	wrctl	status,r2
   10f50:	dfc00017 	ldw	ra,0(sp)
   10f54:	dec00104 	addi	sp,sp,4
   10f58:	f800283a 	ret

00010f5c <alt_sys_init>:
   10f5c:	01000074 	movhi	r4,1
   10f60:	d1600504 	addi	r5,gp,-32748
   10f64:	2104eb04 	addi	r4,r4,5036
   10f68:	001110c1 	jmpi	1110c <alt_dev_llist_insert>

00010f6c <altera_avalon_jtag_uart_write>:
   10f6c:	21000017 	ldw	r4,0(r4)
   10f70:	3005883a 	mov	r2,r6
   10f74:	298d883a 	add	r6,r5,r6
   10f78:	21c00104 	addi	r7,r4,4
   10f7c:	2980072e 	bgeu	r5,r6,10f9c <altera_avalon_jtag_uart_write+0x30>
   10f80:	38c00037 	ldwio	r3,0(r7)
   10f84:	18ffffec 	andhi	r3,r3,65535
   10f88:	183ffc26 	beq	r3,zero,10f7c <__alt_data_end+0xffff0f7c>
   10f8c:	28c00007 	ldb	r3,0(r5)
   10f90:	20c00035 	stwio	r3,0(r4)
   10f94:	29400044 	addi	r5,r5,1
   10f98:	003ff806 	br	10f7c <__alt_data_end+0xffff0f7c>
   10f9c:	f800283a 	ret

00010fa0 <alt_up_accelerometer_spi_open_dev>:
   10fa0:	d1600504 	addi	r5,gp,-32748
   10fa4:	00111781 	jmpi	11178 <alt_find_dev>

00010fa8 <alt_up_accelerometer_spi_read_address_register>:
   10fa8:	20800a17 	ldw	r2,40(r4)
   10fac:	10800023 	ldbuio	r2,0(r2)
   10fb0:	28800005 	stb	r2,0(r5)
   10fb4:	0005883a 	mov	r2,zero
   10fb8:	f800283a 	ret

00010fbc <alt_up_accelerometer_spi_read>:
   10fbc:	20800a17 	ldw	r2,40(r4)
   10fc0:	29400fcc 	andi	r5,r5,63
   10fc4:	11400025 	stbio	r5,0(r2)
   10fc8:	20800a17 	ldw	r2,40(r4)
   10fcc:	10800063 	ldbuio	r2,1(r2)
   10fd0:	30800005 	stb	r2,0(r6)
   10fd4:	0005883a 	mov	r2,zero
   10fd8:	f800283a 	ret

00010fdc <alt_up_accelerometer_spi_write>:
   10fdc:	20800a17 	ldw	r2,40(r4)
   10fe0:	29400fcc 	andi	r5,r5,63
   10fe4:	11400025 	stbio	r5,0(r2)
   10fe8:	20800a17 	ldw	r2,40(r4)
   10fec:	11800065 	stbio	r6,1(r2)
   10ff0:	0005883a 	mov	r2,zero
   10ff4:	f800283a 	ret

00010ff8 <alt_up_accelerometer_spi_read_x_axis>:
   10ff8:	20800a17 	ldw	r2,40(r4)
   10ffc:	00c00c84 	movi	r3,50
   11000:	10c00025 	stbio	r3,0(r2)
   11004:	20800a17 	ldw	r2,40(r4)
   11008:	10800063 	ldbuio	r2,1(r2)
   1100c:	00c00cc4 	movi	r3,51
   11010:	10803fcc 	andi	r2,r2,255
   11014:	28800015 	stw	r2,0(r5)
   11018:	20800a17 	ldw	r2,40(r4)
   1101c:	10c00025 	stbio	r3,0(r2)
   11020:	20800a17 	ldw	r2,40(r4)
   11024:	10800063 	ldbuio	r2,1(r2)
   11028:	10803fcc 	andi	r2,r2,255
   1102c:	1006923a 	slli	r3,r2,8
   11030:	28800017 	ldw	r2,0(r5)
   11034:	1885883a 	add	r2,r3,r2
   11038:	10e0000c 	andi	r3,r2,32768
   1103c:	18000126 	beq	r3,zero,11044 <alt_up_accelerometer_spi_read_x_axis+0x4c>
   11040:	10bffff4 	orhi	r2,r2,65535
   11044:	28800015 	stw	r2,0(r5)
   11048:	0005883a 	mov	r2,zero
   1104c:	f800283a 	ret

00011050 <alt_up_accelerometer_spi_read_y_axis>:
   11050:	20800a17 	ldw	r2,40(r4)
   11054:	00c00d04 	movi	r3,52
   11058:	10c00025 	stbio	r3,0(r2)
   1105c:	20800a17 	ldw	r2,40(r4)
   11060:	10800063 	ldbuio	r2,1(r2)
   11064:	00c00d44 	movi	r3,53
   11068:	10803fcc 	andi	r2,r2,255
   1106c:	28800015 	stw	r2,0(r5)
   11070:	20800a17 	ldw	r2,40(r4)
   11074:	10c00025 	stbio	r3,0(r2)
   11078:	20800a17 	ldw	r2,40(r4)
   1107c:	10800063 	ldbuio	r2,1(r2)
   11080:	10803fcc 	andi	r2,r2,255
   11084:	1006923a 	slli	r3,r2,8
   11088:	28800017 	ldw	r2,0(r5)
   1108c:	1885883a 	add	r2,r3,r2
   11090:	10e0000c 	andi	r3,r2,32768
   11094:	18000126 	beq	r3,zero,1109c <alt_up_accelerometer_spi_read_y_axis+0x4c>
   11098:	10bffff4 	orhi	r2,r2,65535
   1109c:	28800015 	stw	r2,0(r5)
   110a0:	0005883a 	mov	r2,zero
   110a4:	f800283a 	ret

000110a8 <alt_up_accelerometer_spi_read_z_axis>:
   110a8:	20800a17 	ldw	r2,40(r4)
   110ac:	00c00d84 	movi	r3,54
   110b0:	10c00025 	stbio	r3,0(r2)
   110b4:	20800a17 	ldw	r2,40(r4)
   110b8:	10800063 	ldbuio	r2,1(r2)
   110bc:	00c00dc4 	movi	r3,55
   110c0:	10803fcc 	andi	r2,r2,255
   110c4:	28800015 	stw	r2,0(r5)
   110c8:	20800a17 	ldw	r2,40(r4)
   110cc:	10c00025 	stbio	r3,0(r2)
   110d0:	20800a17 	ldw	r2,40(r4)
   110d4:	10800063 	ldbuio	r2,1(r2)
   110d8:	10803fcc 	andi	r2,r2,255
   110dc:	1006923a 	slli	r3,r2,8
   110e0:	28800017 	ldw	r2,0(r5)
   110e4:	1885883a 	add	r2,r3,r2
   110e8:	10e0000c 	andi	r3,r2,32768
   110ec:	18000126 	beq	r3,zero,110f4 <alt_up_accelerometer_spi_read_z_axis+0x4c>
   110f0:	10bffff4 	orhi	r2,r2,65535
   110f4:	28800015 	stw	r2,0(r5)
   110f8:	0005883a 	mov	r2,zero
   110fc:	f800283a 	ret

00011100 <alt_dcache_flush_all>:
   11100:	f800283a 	ret

00011104 <alt_dev_null_write>:
   11104:	3005883a 	mov	r2,r6
   11108:	f800283a 	ret

0001110c <alt_dev_llist_insert>:
   1110c:	20000226 	beq	r4,zero,11118 <alt_dev_llist_insert+0xc>
   11110:	20800217 	ldw	r2,8(r4)
   11114:	1000101e 	bne	r2,zero,11158 <alt_dev_llist_insert+0x4c>
   11118:	d0a00917 	ldw	r2,-32732(gp)
   1111c:	10000926 	beq	r2,zero,11144 <alt_dev_llist_insert+0x38>
   11120:	deffff04 	addi	sp,sp,-4
   11124:	dfc00015 	stw	ra,0(sp)
   11128:	103ee83a 	callr	r2
   1112c:	00c00584 	movi	r3,22
   11130:	10c00015 	stw	r3,0(r2)
   11134:	00bffa84 	movi	r2,-22
   11138:	dfc00017 	ldw	ra,0(sp)
   1113c:	dec00104 	addi	sp,sp,4
   11140:	f800283a 	ret
   11144:	d0a07004 	addi	r2,gp,-32320
   11148:	00c00584 	movi	r3,22
   1114c:	10c00015 	stw	r3,0(r2)
   11150:	00bffa84 	movi	r2,-22
   11154:	f800283a 	ret
   11158:	28800017 	ldw	r2,0(r5)
   1115c:	21400115 	stw	r5,4(r4)
   11160:	20800015 	stw	r2,0(r4)
   11164:	28800017 	ldw	r2,0(r5)
   11168:	11000115 	stw	r4,4(r2)
   1116c:	29000015 	stw	r4,0(r5)
   11170:	0005883a 	mov	r2,zero
   11174:	f800283a 	ret

00011178 <alt_find_dev>:
   11178:	defffb04 	addi	sp,sp,-20
   1117c:	dcc00315 	stw	r19,12(sp)
   11180:	dc800215 	stw	r18,8(sp)
   11184:	dc400115 	stw	r17,4(sp)
   11188:	dc000015 	stw	r16,0(sp)
   1118c:	dfc00415 	stw	ra,16(sp)
   11190:	2027883a 	mov	r19,r4
   11194:	2823883a 	mov	r17,r5
   11198:	2c000017 	ldw	r16,0(r5)
   1119c:	0010ca00 	call	10ca0 <strlen>
   111a0:	14800044 	addi	r18,r2,1
   111a4:	84400726 	beq	r16,r17,111c4 <alt_find_dev+0x4c>
   111a8:	81000217 	ldw	r4,8(r16)
   111ac:	900d883a 	mov	r6,r18
   111b0:	980b883a 	mov	r5,r19
   111b4:	001126c0 	call	1126c <memcmp>
   111b8:	10000426 	beq	r2,zero,111cc <alt_find_dev+0x54>
   111bc:	84000017 	ldw	r16,0(r16)
   111c0:	003ff806 	br	111a4 <__alt_data_end+0xffff11a4>
   111c4:	0005883a 	mov	r2,zero
   111c8:	00000106 	br	111d0 <alt_find_dev+0x58>
   111cc:	8005883a 	mov	r2,r16
   111d0:	dfc00417 	ldw	ra,16(sp)
   111d4:	dcc00317 	ldw	r19,12(sp)
   111d8:	dc800217 	ldw	r18,8(sp)
   111dc:	dc400117 	ldw	r17,4(sp)
   111e0:	dc000017 	ldw	r16,0(sp)
   111e4:	dec00504 	addi	sp,sp,20
   111e8:	f800283a 	ret

000111ec <alt_icache_flush_all>:
   111ec:	f800283a 	ret

000111f0 <altera_nios2_gen2_irq_init>:
   111f0:	000170fa 	wrctl	ienable,zero
   111f4:	f800283a 	ret

000111f8 <alt_exception_cause_generated_bad_addr>:
   111f8:	213ffe84 	addi	r4,r4,-6
   111fc:	008003c4 	movi	r2,15
   11200:	11001636 	bltu	r2,r4,1125c <alt_exception_cause_generated_bad_addr+0x64>
   11204:	200890ba 	slli	r4,r4,2
   11208:	00800074 	movhi	r2,1
   1120c:	10848704 	addi	r2,r2,4636
   11210:	2089883a 	add	r4,r4,r2
   11214:	20800017 	ldw	r2,0(r4)
   11218:	1000683a 	jmp	r2
   1121c:	00011264 	muli	zero,zero,1097
   11220:	00011264 	muli	zero,zero,1097
   11224:	0001125c 	xori	zero,zero,1097
   11228:	0001125c 	xori	zero,zero,1097
   1122c:	0001125c 	xori	zero,zero,1097
   11230:	00011264 	muli	zero,zero,1097
   11234:	0001125c 	xori	zero,zero,1097
   11238:	0001125c 	xori	zero,zero,1097
   1123c:	00011264 	muli	zero,zero,1097
   11240:	00011264 	muli	zero,zero,1097
   11244:	0001125c 	xori	zero,zero,1097
   11248:	00011264 	muli	zero,zero,1097
   1124c:	0001125c 	xori	zero,zero,1097
   11250:	0001125c 	xori	zero,zero,1097
   11254:	0001125c 	xori	zero,zero,1097
   11258:	00011264 	muli	zero,zero,1097
   1125c:	0005883a 	mov	r2,zero
   11260:	f800283a 	ret
   11264:	00800044 	movi	r2,1
   11268:	f800283a 	ret

0001126c <memcmp>:
   1126c:	218d883a 	add	r6,r4,r6
   11270:	21800826 	beq	r4,r6,11294 <memcmp+0x28>
   11274:	20800003 	ldbu	r2,0(r4)
   11278:	28c00003 	ldbu	r3,0(r5)
   1127c:	10c00226 	beq	r2,r3,11288 <memcmp+0x1c>
   11280:	10c5c83a 	sub	r2,r2,r3
   11284:	f800283a 	ret
   11288:	21000044 	addi	r4,r4,1
   1128c:	29400044 	addi	r5,r5,1
   11290:	003ff706 	br	11270 <__alt_data_end+0xffff1270>
   11294:	0005883a 	mov	r2,zero
   11298:	f800283a 	ret
